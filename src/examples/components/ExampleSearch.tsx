import React, { useState } from 'react';\nimport { Form, InputGroup, ListGroup, Dropdown } from 'react-bootstrap';\nimport { FiSearch, FiFilter } from 'react-icons/fi';\n\ninterface ExampleSearchProps {\n  examples: Array<{\n    id: string;\n    title: string;\n    category: string;\n    description: string;\n    features: string[];\n  }>;\n  onExampleSelect: (exampleId: string) => void;\n}\n\nexport const ExampleSearch: React.FC<ExampleSearchProps> = ({ examples, onExampleSelect }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [showResults, setShowResults] = useState(false);\n\n  const categories = ['all', ...new Set(examples.map(ex => ex.category))];\n\n  const filteredExamples = examples.filter(example => {\n    const matchesSearch = example.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         example.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         example.features.some(feature => feature.toLowerCase().includes(searchTerm.toLowerCase()));\n    const matchesCategory = selectedCategory === 'all' || example.category === selectedCategory;\n    return matchesSearch && matchesCategory;\n  });\n\n  return (\n    <div className=\"mb-4\">\n      <InputGroup>\n        <InputGroup.Text>\n          <FiSearch />\n        </InputGroup.Text>\n        <Form.Control\n          placeholder=\"Search examples, features, or descriptions...\"\n          value={searchTerm}\n          onChange={(e) => {\n            setSearchTerm(e.target.value);\n            setShowResults(e.target.value.length > 0);\n          }}\n          onFocus={() => setShowResults(searchTerm.length > 0)}\n        />\n        <Dropdown>\n          <Dropdown.Toggle variant=\"outline-secondary\">\n            <FiFilter className=\"me-1\" />\n            {selectedCategory === 'all' ? 'All Categories' : selectedCategory}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            {categories.map(category => (\n              <Dropdown.Item\n                key={category}\n                active={selectedCategory === category}\n                onClick={() => setSelectedCategory(category)}\n              >\n                {category === 'all' ? 'All Categories' : category}\n              </Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n      </InputGroup>\n\n      {showResults && (\n        <div className=\"position-relative\">\n          <ListGroup className=\"position-absolute w-100 mt-1\" style={{ zIndex: 1000 }}>\n            {filteredExamples.slice(0, 8).map(example => (\n              <ListGroup.Item\n                key={example.id}\n                action\n                onClick={() => {\n                  onExampleSelect(example.id);\n                  setShowResults(false);\n                  setSearchTerm('');\n                }}\n              >\n                <div className=\"d-flex justify-content-between align-items-start\">\n                  <div>\n                    <h6 className=\"mb-1\">{example.title}</h6>\n                    <p className=\"mb-1 small text-muted\">{example.description}</p>\n                    <div>\n                      {example.features.slice(0, 3).map((feature, index) => (\n                        <span key={index} className=\"badge bg-light text-dark me-1 small\">\n                          {feature}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                  <small className=\"text-muted\">{example.category}</small>\n                </div>\n              </ListGroup.Item>\n            ))}\n            {filteredExamples.length === 0 && (\n              <ListGroup.Item className=\"text-muted text-center\">\n                No examples found matching \"{searchTerm}\"\n              </ListGroup.Item>\n            )}\n          </ListGroup>\n        </div>\n      )}\n    </div>\n  );\n};\n